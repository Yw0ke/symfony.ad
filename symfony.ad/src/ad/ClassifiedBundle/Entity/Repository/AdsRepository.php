<?php

namespace ad\ClassifiedBundle\Entity\Repository;

use Doctrine\ORM\Query\Parameter;

use Doctrine\Common\Collections\ArrayCollection;

use Doctrine\ORM\EntityRepository;
use ad\ClassifiedBundle\Entity\attribute_values;


/**
 * AdsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdsRepository extends EntityRepository
{
	/**
	 * Get ad's info.
	 *
	 * @return array(attributeValues)
	 */
	public function getFullInfoById($id)
	{
		$em = $this->getEntityManager();
		
		$qb = $em->createQueryBuilder();
		$qb->addSelect('v');
		$qb->addSelect('ads');
		$qb->addSelect('attr');
		$qb->from('adClassifiedBundle:attributeValues','v');
		$qb->leftJoin('v.AdsId', 'ads');
		$qb->leftJoin('v.attributeId', 'attr');
		$qb->where('v.AdsId = :id');

		$qb->setParameter('id', $id);
		
		return $response = $qb->getQuery()->getResult();
	}
	
	/**
	 * Get ads's minimum info.
	 *
	 * @return array(attributeValues)
	 */
	public function getMinInfo()
	{
		$em = $this->getEntityManager();
	
		$qb = $em->createQueryBuilder();
		$qb->addSelect('v');
		$qb->addSelect('ads');
		$qb->addSelect('attr');
		$qb->from('adClassifiedBundle:attributeValues','v');
		$qb->leftJoin('v.AdsId', 'ads');
		$qb->leftJoin('v.attributeId', 'attr');
		$qb->where('attr.name = :price');
		$qb->orWhere('attr.name = :confirmed');
		$qb->orWhere('attr.name = :ownerType');
		$qb->orWhere('attr.name = :ownerCity');
		$qb->groupBy('attr.name');
		//$qb->groupBy('attr.name');
		
		$qb->setParameters(new ArrayCollection(array(
													 new Parameter(':price', 'Price'),
													 new Parameter(':confirmed', 'Confirmed'),
													 new Parameter(':ownerType', 'OwnerType'),
													 new Parameter(':ownerCity', 'OwnerCity')
													 )));


		var_dump($qb->getQuery()->getResult());
		
		return $response = $qb->getQuery()->getResult();
	}
	
	/**
	 * Get ads waiting for confimation from admin.
	 *
	 * @return string
	 */
	public function getUnconfirmedAds()
	{
		$em = $this->getEntityManager();
	
		$qb = $em->createQueryBuilder();
		$qb->addSelect('v');
		$qb->addSelect('ads');
		$qb->addSelect('att');
		$qb->from('adClassifiedBundle:attributeValues','v');
		$qb->leftJoin('v.AdsId', 'ads');
		$qb->leftJoin('v.attributeId', 'att');
	
		$response = $qb->getQuery()->getResult();
		
		var_dump($response);
		die;
	}
}
